Imports System.IO

Public Class malware_informer
    Sub New()
        InitializeComponent()
        Me.DoubleBuffered = True
    End Sub

    Private Sub malware_informer_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        bgWorker_Detections.RunWorkerAsync()
    End Sub

    Private Sub bgWorker_Detections_DoWork(sender As Object, e As System.ComponentModel.DoWorkEventArgs) Handles bgWorker_Detections.DoWork
        Dim detected_filepath As New List(Of String)()
        Dim detected_filehash As New List(Of String)()

        ' read detections file
        Dim fpath As String = Application.StartupPath & "/data/detected.list"
        Dim reader As StreamReader = My.Computer.FileSystem.OpenTextFileReader(fpath)
        Dim line As String
        Do
            line = reader.ReadLine
            If Not String.IsNullOrEmpty(line) Then
                Dim tempArray() As String = Split(line, " |+| ")
                detected_filepath.Add(tempArray(0))
                detected_filehash.Add(tempArray(1))
            End If
        Loop Until line Is Nothing

        Dim totalDetections As Integer = detected_filehash.Count
        For x As Integer = 0 To totalDetections - 1
            create_cards(detected_filepath(x), detected_filehash(x))
        Next
    End Sub

    Private Sub create_cards(file As String, hash As String)
        Try
            ' invoke to bypass illegal cross threading UI update
            BeginInvoke(CType(Sub()
                                  Dim ucdetected As New UC_Detected
                                  ucdetected.txtFile.Text = file
                                  ucdetected.txtHash.Text = hash
                                  flowDetections.Controls.Add(ucdetected)
                              End Sub, MethodInvoker))
        Catch ex As Exception : End Try
    End Sub

    Private Sub bgWorker_Detections_ProgressChanged(sender As Object, e As System.ComponentModel.ProgressChangedEventArgs) Handles bgWorker_Detections.ProgressChanged

    End Sub

    Private Sub bgWorker_Detections_RunWorkerCompleted(sender As Object, e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles bgWorker_Detections.RunWorkerCompleted

    End Sub
End Class
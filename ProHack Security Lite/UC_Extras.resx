<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQgAAAAuCAYAAADUdIdgAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAAA4hJREFUeF7t3S9T
        3EAYx3EEAoHAgUBUVlaeQCB4CQhEReVJxEneAwJRgUBWVPRFVFRWMlPLtBWVlRXX33OXHMvmSbL5c8wl
        +T4zn7nmySYDTHZ7m81u9pbL5dYobsX+YW69MiHFpTxl5YGpsWv/0qsbMcVb+W6f3v6+uMmuFPvyWfJf
        PGe5/ZLydxKXB6bI6kKhnuQUM/kttmGfM69cH9xkF4oD8RqHnO07iI6hcQBeugvrSFBXzuVvViZn22de
        +a7cZFuKQ/kq4Q/vsTKH2THWrYj3A4i6G7Yt/7J9McsndU+acJNtKI4kpXHIWdlj4Z4D4LO6sfq2rZhL
        WeOQs/3zuG524SabUpzIo4Q/bIqfTg7As/eyiHJ1Fl49bcNNNqE4lTaNA4B6P5xcitpRwxRuMpXChlry
        u6kAdsuDlI6GpHCTKRTvhMYB2G2FUcMm3GQdxZnEQy0AdtNm1LApN1lFcSE0DsCw2FOXJ16druImyyiq
        xmEB7DYbTHjj1e0ybtKjsOEWGgdg2Oy+YfL8DTcZU1xnJwcwfH8k6dFsNxlS3GQnBTAedh/xwqvzITeZ
        U4TTtQGMS+38DT+5nn79UcKTARgfaySuvXbAFBPrxqFqujaA8bmJ24JVe/BiYz1d+0t2AIBpKczfiBuH
        JtO1AYzPJ9nM38gbB5uu/U3CggCmyXoR+YJOrddyADBeq/kbwj0HAC774sA3CAAluAcBoMQjoxgAPOt7
        EHkDETQS3JMApu15FCNsILJGgicpgekqPgcRswLCXAxgWsqfpPTYAcHBAMarfi6Gxw4MTgJgXJrN5vTY
        CbKTARiPdutBeBSsSQmMR/cVpWIKVrUGhq+/NSljCt6LAQxX/6taxxS8WQsYnu29FyOm4N2cwHBs/81a
        MQVv9wZ23+u9mzOmOBWmiwO76fXf7h1TtF1T4peTA9CPB9nMq2jDTbahOJIm08Wt7LHQRQF8Vjfuolyq
        wryKNtxkW4rUNSU2fSLFVZYD8NJVVkcWQS7FIqyXXbjJLhQHUjVdvNAnUtxn+wCs3Ud1ZC51Dyna/nl4
        XFdusitF2ZoSliv0iSwnNBLAmtUFr55UPcls+cp5FW24yb4owunitX0ihXU3uCeBqbJrf9WtKKM4l/gh
        RdtOenS6KTfZJ4U1Esk3TBTWRfkgtuzVk+R/BGCM7Bq3a92u+aThSMVM8v9I7XPmletuufcfcbRdcjm0
        VPcAAAAASUVORK5CYII=
</value>
  </data>
</root>